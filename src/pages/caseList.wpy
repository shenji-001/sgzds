<style lang="less">
  page{
    background: #f5f5f5;
    position: relative;
  }
  .login-footer{
    position: fixed;
    z-index: 2;
    bottom: 114rpx; /*偏移*/
    left: 50%;
    transform: translate(-50%, 0);
    width: 518rpx;
    height: 96rpx;
    line-height:96rpx;
    color: #fff;
    font-size: 36rpx;
    background: #2f54eb;
    border-radius: 48rpx;
    text-align: center;
  }
  .caseList{
    height: 100%;
    width: 100%;
    margin-top: 80px;
    overflow-y: scroll;
  }
  .caseList-head{
    /*width: 100%;*/
    position: fixed;
    z-index: 11;
    top: 1;
    left: 0;
    width: 92vw;
    background: #fff;
    height: 100rpx;
    line-height:100rpx;
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0 4vw;
    .caseList-head-left{
      display: flex;
      align-items: center;
    }
    .caseList-head-right{
      display: flex;
      align-items: center;
    }
    .caseList-head-file{
      width: 39.34rpx;
      height: 44.96rpx;
      margin-right: 16rpx;
    }
  }
  .caseList-content-unload{
    position: absolute;
    top: 400rpx; /*偏移*/
    left: 50%;
    transform: translate(-50%, 0);
  .content-unload{
    display:flex;
    flex-direction: column;
    align-items: center;
  }
    .caseList-content-img{
      width: 176rpx;
      height:174rpx;
      margin-bottom: 30rpx;
    }
   }
  .gay{
    color: #999;
  }
  .caseList-content{
    position: absolute;
    top:120rpx;
    padding-bottom: 200rpx;
     margin: 34rpx 3% 0 3%;
     width: 94%;
     font-size:28rpx;
    .caseList-content-item {
      margin-bottom: 24rpx;
      background: #fff;
      padding: 36rpx 20rpx 36rpx 0;
      display: flex;
      align-items: center;
      justify-content: space-between;
      .content-item-left{

      }
      .content-item-right{
        padding: 7rpx 15rpx;
        color: #fff;
        background: #2f54e8;
        border-radius: 8rpx;
      }
      .row{
        display: flex;
        align-items: center;
        padding-left: 36rpx;
      }
      .line1{
        border-left:8rpx solid #2f54eb;
        height: 38rpx;
        line-height: 38rpx;
        padding-top: 2rpx;
        padding-left: 31rpx;
        margin-bottom: 16rpx;
      }
      .line2{
        border-left:8rpx solid #2f54eb;
        height: 38rpx;
        line-height: 38rpx;
        padding-top: 2rpx;
        padding-left: 31rpx;
      }
      .w-12{
        width: 114rpx;
      }
      .between{
        display: flex;
        justify-content: space-between;
      }
    }
  }
  .content-item-photo{
    width: 174rpx;
    height: 174rpx;
    position: fixed;
    right: 0;
    bottom:188rpx;
  }
  .caseList-contennt{
    position: fixed;
    bottom:106rpx;
    /*margin-top: 130rpx;*/
    width: 94%;
    display:flex;
    font-size: 36rpx;
    justify-content: space-between;
    .caseList-contennt-left{
      width: 322rpx;
      background: #fff;
      height: 100rpx;
      color: #2f54eb;
      line-height: 100rpx;
      text-align: center;
      border-radius: 8rpx;
      border: 2rpx solid rgba(47, 84, 235, 1);
    }
    .caseList-contennt-left1{
      width: 100%;
      background: #fff;
      height: 100rpx;
      color: #2f54eb;
      line-height: 100rpx;
      text-align: center;
      border-radius: 8rpx;
      border: 2rpx solid rgba(47, 84, 235, 1);
    }
    .caseList-contennt-right{
      width: 322rpx;
      height: 100rpx;
      line-height: 100rpx;
      text-align: center;
      border-radius: 8rpx;
      background: #2f54eb;
      color: #fff;
    }
  }
  .content-right-image{
    width: 32rpx;
    height: 32rpx;
  }
</style>
<template>
  <view class="caseList">
     <head></head>
    <view class="caseList-head">
      <view class="caseList-head-left">
        <view style="margin-right: 48rpx" class="{{ hisShow ? 'gay':'' }}" @tap="sesssin">当前案件</view>
        <view class="{{ !hisShow ? 'gay':'' }}" @tap="historyCase">历史案件</view>
      </view>
      <view class="caseList-head-right">
        <image class="caseList-head-file" src="../assert/images/file.png"></image>
        <view @tap='toH5'>流程说明</view>
      </view>
    </view>
    <view class="caseList-content" wx:if="{{isLoad && !hisShow}}">
      <view class="caseList-content-item" @tap="toShowMetarical({{item}})" wx:if="{{caseList.length}}" wx:for="{{caseList}}" data-index ='{{index}}' wx:key='index'>
        <view class="content-item-left">
          <view class="row line1">
            <view class="gay w-12">案件号： </view>
            <view>{{item.registNo}}</view>
          </view>
          <view class="row">
            <view class="gay w-12 between">
              <view>时</view>
              <view>间：</view></view>
            <view>{{item.createdOn}}</view>
          </view>
        </view>
        <view class="content-item-right">{{item.name}}</view>
      </view>
      <!-- <view class="caseList-content-item" wx:if="{{caseList.length}}">
        <view class="content-item-left">
          <view class="row line2">
            <view class="gay w-12">案件号： </view>
            <view>{{caseList[0].registNo}}</view>
          </view>
        </view>
        <view class="content-item-right">补传单证</view>
      </view> -->
      <!-- <image class="content-item-photo" src="../assert/images/photo.png" @tap="toUplad({{caseList[0]}})"></image> -->
      <view class="caseList-content-unload" wx:if="{{!caseList.length}}">
        <view class="content-unload">
          <image class="caseList-content-img" src="../assert/images/unload.png"></image>
          <view class="gay">当前无信息</view>
        </view>
      </view>
      <view class="caseList-contennt" wx:if="{{isLoad}}">
        <view class="caseList-contennt-left" @tap="back">退出登陆</view>
        <view class="caseList-contennt-right" @tap="toVideo({{caseList[0]}})">连接坐席</view>
      </view>
    </view>
    <view class="caseList-content" wx:if="{{isLoad && hisShow}}">
      <view class="caseList-content-item" @tap="toMetaricalDetail({{item}})" wx:for="{{casesList}}" data-index ='{{index}}' wx:key='index'>
        <view class="content-item-left">
          <view class="row line1">
            <view class="gay w-12">案件号： </view>
            <view>{{item.registNo}}</view>
          </view>
          <view class="row">
            <view class="gay w-12 between">
              <view>时</view>
              <view>间：</view></view>
            <view>{{item.createdOn}}</view>
          </view>
        </view>
        <image class="content-right-image" src="../assert/images/right.png"></image>
      </view>
    </view>
    <view class="caseList-content-unload" wx:if="{{!isLoad}}">
      <view class="content-unload">
        <image class="caseList-content-img" src="../assert/images/unload.png"></image>
        <view class="gay">登陆后查看更多信息</view>
      </view>
    </view>
    <view wx:if="{{!isLoad}}" class="login-footer" @tap="login">登陆</view>
  </view>
</template>

<script>
  import wepy from 'wepy';
  import { connect } from 'wepy-redux';
  import testMixin from '../mixins/test';
  const socket1 = require('../utils/socket');
  import Head from '@/components/head';
  import{ ASYNC_UPLOADMATERICAL_URL, PROCESS_DESCRIPTION_URL, SAVE_SOCKETIO, SAVE_PHONE } from '../store/types';
  import {asyncsession, asyncElevevi, asyncCases, asyncServerInfo, asyncUploads} from '../store/actions';

  @connect({
    isLoad(state) {
      return state.loginPhone.token
    },
    server(state) {
      return state.serverinfo.serverinfo
    },
    phone(state) {
      return state.loginPhone.phone
    }
  }, {
    sessionIn: asyncsession,
    getElevevi: asyncElevevi,
    asyncCases: asyncCases,
    getserverinfo: asyncServerInfo,
    uploads: asyncUploads,
    SAVE_SOCKETIO,
    SAVE_PHONE
  })

  export default class caseList extends wepy.page {
    config = {
      navigationBarTitleText: '太平智定损'
    }
    components = {
      head: Head
    }

    mixins = [testMixin]

    data = {
      mynum: 20,
      hisShow: false,
      casesList: [],
      caseList: [],
      locationInfo: ''
    }

    computed = {
    }

    methods = {
      toUplad(item) {
        let url = 'upload?caseid=' + item.caseId
        wx.navigateTo({
          url: url
        })
      },
      login() {
        wx.navigateTo({
          url: 'login'
        })
      },
      isWork() {
        let hour = new Date().getHours();
        return hour > 7 && hour < 22
      },
      toVideo(item) {
        if (!this.methods.isWork()) {
          wx.showModal({
            title: '提示',
            content: '当前时间为非工作时间，请您在工作时间连接视频。如需帮助，请拨打95589',
            showCancel: false
          })
          return
        }
        let that = this;
        let url = '';
        if (!this.locationInfo) {
          wx.getLocation({
            type: 'wgs84',
            success: function (res) {
              that.locationInfo = res;
              let loc = {
                lat: that.methods.GPSMAXlength(res.latitude - 0.031),
                lng: that.methods.GPSMAXlength(res.longitude - 0.039)
              }
              url = `video?caseid=${item.caseId}&lat=${loc.lat}&lng=${loc.lng}`
              wx.navigateTo({
                url: url
              })
            },
            fail: function (res) {
              wx.authorize({ scope: "scope.userLocation" })
            }
          })
        } else {
          let loc = {
            lat: that.methods.GPSMAXlength(that.locationInfo.latitude + 0.031),
            lng: that.methods.GPSMAXlength(that.locationInfo.longitude - 0.039)
          }
          url = `video?caseid=${item.caseId}&lat=${loc.lat}&lng=${loc.lng}`;
          wx.navigateTo({
            url: url
          })
        }
      },
      GPSMAXlength(val, num) {
        let max = num || 8
        try {
          if (val && val.split('.')[1].length > (max - 1)) {
            return val.split('.')[0] + '.' + val.split('.')[1].splice(0, max)
          } else {
            return val
          }
        } catch(e) {
          return val
        }
      },
      toH5() {
        let url = encodeURIComponent(PROCESS_DESCRIPTION_URL);
        wx.navigateTo({
          url: 'h5Conteiner?src=' + url
        })
      },
      toMetaricalDetail(item) {
        console.log(item)
        let url = 'metaricalDetail?caseid=' + item.id
        wx.navigateTo({
          url: url
        })
      },
      toShowMetarical(item) {
        let path = item.attachmentPath || item.clientSignature
        let url = this.server.fileSiteUrl + '/' + path
        wx.previewImage({
          current: url, // 当前显示图片的http链接
          urls: [url] // 需要预览的图片http链接列表
        })
      },
      back() {
        if (getCurrentPages().length < 2) {
          let url = 'login'
          wx.navigateTo({
            url: url
          })
        } else {
          wx.navigateBack()
        }
        // wx.navigateBack()
      },
      historyCase() {
        this.hisShow = true
        let that = this
        if (that.phone) {
          this.methods.getCasesList(that.phone).then(res => {
            if (res.payload && res.payload.length) {
              that.casesList = that.methods.getTime(res.payload, 'reportTime')
            }
            that.$apply()
          })
        }
      },
      upload(val) {
        let that = this
        wx.chooseImage({
          count: 1,
          sizeType: ['original', 'compressed'],
          sourceType: ['album', 'camera'],
          success (res) {
            let data = {
              picpath: res.tempFilePaths[0],
              categoryId: '21'
            }
            let id = val.caseId
            that.methods.postuploads(id, data).then(res => {
              if (res.attachmentPath) {
                wx.showToast({
                  title: '上传成功',
                  icon: 'success',
                  duration: 2000
                })
              }
            })
          }
        })
      },
      uploaduoload(val) {
        let that = this
        wx.chooseImage({
          count: 1,
          sizeType: ['original', 'compressed'],
          sourceType: ['album', 'camera'],
          success (res) {
            const tempFilePaths = res.tempFilePaths
            wx.uploadFile({
              url: ASYNC_UPLOADMATERICAL_URL,
              filePath: tempFilePaths[0],
              name: 'file',
              header: {
                'Authorization': 'Bearer ' + that.$parent.globalData.token
              },
              formData: {
                'file': tempFilePaths[0]
              },
              success (res) {
                if (res && res.data) {
                  let a = JSON.parse(res.data)
                  let data = {
                    categoryId: '21',
                    picpath: a.path
                  }
                  let id = val.caseId
                  that.methods.postuploads(id, data).then(res => {
                    if (res.attachmentPath) {
                      wx.showToast({
                        title: '上传成功',
                        icon: 'none',
                        duration: 1500
                      })
                    }
                  })
                } else {
                  wx.showToast({
                    title: '上传失败',
                    icon: 'none',
                    duration: 1500
                  })
                }
              },
              fail(e) {
                wx.showToast({
                  title: '上传失败',
                  icon: 'none',
                  duration: 1500
                })
              }
            })
          }
        })
      },
      sesssin() {
        this.hisShow = false
        if (this.isLoad) {
          this.methods.getcase().then(res => {
            if (res.length) {
              this.caseList = this.methods.getTime(res)
              this.$apply()
            }
          })
        }
      },
      async sessin1(val) {
        this.hisShow = false
        let a = await this.sessionIn()
        if (a.payload.caseId) {
          console.log(this)
          this.getcase(a.payload.caseId)
        }
      },
      async getCaseList(val) {
        this.hisShow = false
        let a = await this.sessionIn()
        if (a.payload.caseId) {
          this.getcase(a.payload.caseId)
        }
      },
      async getCasesList(val) {
        this.hisShow = false
        let a = await this.asyncCases(val)
        if (a.payload && typeof a.payload == 'object') {
          return a
        } else {
          return []
        }
      },
      // 获取当前案件资料列表
      async getcase(val) {
        let a = await this.getElevevi(val)
        if (a.payload) {
          return a.payload
        } else {
          return []
        }
      },
      async getServerInfo(val) {
        let a = await this.getserverinfo(val)
        if (a.payload) {
          console.log(a)
        }
      },
      async postuploads(id, val) {
        console.log(val)
        let a = await this.uploads(id, val)
        if (a.payload) {
          return a.payload
        } else {
          return []
        }
      },
      addZero(val) {
        if (val < 10) {
          return '0' + val;
        } else {
          return val;
        }
      },
      getTime(val, type) {
        if (val.length) {
          let value = val
          value.forEach(item => {
            let time = new Date(item[type] || item.createdOn)
            let year = time.getFullYear()
            let mouth = this.addZero(time.getMonth() - 1)
            let day = this.addZero(time.getDate())
            let hour = this.addZero(time.getHours())
            let second = this.addZero(time.getSeconds())
            let mun = this.addZero(time.getMinutes())
            let date = `${year}-${mouth}-${day} ${hour}:${mun}:${second}`
            item.createdOn = date
          })
          return value
        } else {
          return []
        }
      }
    }
    onLoad() {
      if (getCurrentPages().length < 2) {
        this.methods[SAVE_PHONE]('')
      }
      if(this.isLoad) {
        this.methods.getcase().then(res => {
          if (res.length) {
            this.caseList = this.methods.getTime(res)
            this.$apply()
          }
        })
      }
      this.methods.getServerInfo()
    }
    onShow() {
    }
  }
</script>
